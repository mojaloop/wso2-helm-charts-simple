# CircleCI v2 Config
version: 2

defaults_working_directory: &defaults_working_directory
  working_directory: /home/circleci/project

defaults_docker_node: &defaults_docker_node
  docker:
    - image: alpine/helm:2.13.1

defaults_Dependencies: &defaults_Dependencies
  name: Install default dependencies
  command: |
    apk --no-cache add git
    apk --no-cache add ca-certificates
    apk --no-cache add curl
    apk --no-cache add openssh-client
    apk add --no-cache -t build-dependencies make gcc g++ python libtool autoconf automake

defaults_Environment: &defaults_environment
  name: Set default environment
  command: |
    echo "Initialising helm for local use only"
    helm init --client-only --skip-refresh

    echo "Adding repos necessary for publishing process"
    helm repo add incubator http://storage.googleapis.com/kubernetes-charts-incubator
    helm repo add kiwigrid https://kiwigrid.github.io

defaults_slack_announcement: &defaults_slack_announcement
  name: Slack announcement for tag releases
  command: |
    curl -X POST \
      $SLACK_WEBHOOK_ANNOUNCEMENT \
      -H 'Content-type: application/json' \
      -H 'cache-control: no-cache' \
      -d "{
      \"text\": \"*${CIRCLE_PROJECT_REPONAME}* - Release \`${CIRCLE_TAG}\`: https://github.com/mojaloop/${CIRCLE_PROJECT_REPONAME}/releases/tag/${CIRCLE_TAG}\"
    }"

defaults_git_identity_setup: &defaults_git_identity_setup
  name: Setup Git Identity
  command: |
    echo "Setting BASH_ENV..."
    source $BASH_ENV

    git config --global user.email "$GIT_CI_USER"
    git config --global user.password "$GIT_CI_PASSWORD"
    git config --global user.name "$GIT_CI_EMAIL"
    git remote add $GITHUB_PROJECT_USERNAME https://$GIT_CI_USER:$GITHUB_TOKEN@github.com/$GITHUB_PROJECT_USERNAME/$GITHUB_PROJECT_REPONAME.git

defaults_publish_to_gh_pages: &defaults_publish_to_gh_pages
  name: Publish documentation
  command: |
    echo "Setting BASH_ENV..."
    source $BASH_ENV
    echo "Package helm charts..."
    bash package.sh wso2-am $CIRCLE_TAG repo
    bash package.sh wso2-is-km $CIRCLE_TAG repo
    mkdir -p ~/repo/branch
    GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no" git clone $CIRCLE_REPOSITORY_URL ~/repo/branch
    cd ~/repo/branch
    git checkout gh-pages || git checkout --orphan gh-pages
    cd -
    cp -r repo ~/repo/branch
    cd ~/repo/branch/repo
    git add -A
    git config --global user.email "cicd@modusbox.com"
    git config --global user.name "CICD at ModusBox"
    git commit -m "Automated deployment to GitHub Pages" --allow-empty
    GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no" git push origin gh-pages

jobs:
  setup:
    <<: *defaults_working_directory
    <<: *defaults_docker_node
    steps:
      - checkout
      - run:
          name: Placeholder for setup
          command: echo "Placeholder for setup - Nothing to do here"

  test:
    <<: *defaults_working_directory
    <<: *defaults_docker_node
    steps:
      - checkout
      - run:
          <<: *defaults_Dependencies
      - run:
          <<: *defaults_environment
      - run:
          name: Linting Helm Charts
          command: |
            echo "Placeholder for test - Nothing to do here"
            #sh lint-charts.sh

  # build:
  #   <<: *defaults_working_directory
  #   <<: *defaults_docker_node
  #   steps:
  #     - checkout
  #     - run:
  #         <<: *defaults_Dependencies
  #     - run:
  #         <<: *defaults_environment
  #     - run:
  #         name: Update Helm Charts
  #         command: |
  #           ./build.sh ./workdir $CIRCLE_TAG
  #           ./package.sh ./workdir ./wso2-repo/wso2-helm

  deploy:
    <<: *defaults_working_directory
    <<: *defaults_docker_node
    steps:
      - add_ssh_keys:
          fingerprints:
            - "d2:71:0c:22:78:a9:a2:94:68:b2:6c:86:36:54:c6:10"
      - checkout
      - run:
          <<: *defaults_Dependencies
      - run:
          <<: *defaults_environment
      - run:
          name: setup environment vars
          command: |
            echo 'export GITBOOK_TARGET_BRANCH=$GITBOOK_TARGET_BRANCH' >> $BASH_ENV
            echo 'export GITHUB_TOKEN=$GITHUB_TOKEN' >> $BASH_ENV
            echo 'export GITHUB_PROJECT_USERNAME=$CIRCLE_PROJECT_USERNAME' >> $BASH_ENV
            echo 'export GITHUB_PROJECT_REPONAME=$CIRCLE_PROJECT_REPONAME' >> $BASH_ENV
            echo 'export GITHUB_TAG=$CIRCLE_TAG' >> $BASH_ENV
            echo 'export GIT_CI_USER=$GIT_CI_USER' >> $BASH_ENV
            echo 'export GIT_CI_EMAIL=$GIT_CI_EMAIL' >> $BASH_ENV
      - run:
          <<: *defaults_git_identity_setup
      - run:
          <<: *defaults_publish_to_gh_pages
      # - run:
      #     <<: *defaults_slack_announcement

workflows:
  version: 2
  build_and_test:
    jobs:
      - setup:
          context: org-global
          filters:
            tags:
              only: /.*/
            branches:
              ignore:
                - /feature.*/
                - /bugfix.*/
                - gh-pages
      - test:
          context: org-global
          requires:
            - setup
          filters:
            tags:
              only: /.*/
            branches:
              ignore:
                - /feature.*/
                - /bugfix.*/
                - gh-pages
      # - build:
      #     context: org-global
      #     requires:
      #       - test
      #     filters:
      #       tags:
      #         only: /.*/
      #       branches:
      #         ignore:
      #           - /feature.*/
      #           - /bugfix.*/
      #           - gh-pages
      - deploy:
          context: org-global
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore:
                - /.*/
